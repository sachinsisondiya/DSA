#include<iostream>
#include<vector>
#include<queue>
using namespace std;
class node{
public:
    int data;
    node* left;
    node* right;
    node(int data){
        this->data=data;
        this->left=NULL;
        this->right=NULL;
    }
};

node* built(){
    int data;
    cin>>data;
    if(data==-1){
        return NULL;
    }
    node* root=new node(data);
    root->left=built();
    root->right=built();

    return root;

};

void pre(node* root, vector<int> &ans){
    if(root==NULL){
        return;
    }
    ans.push_back(root->data);
    pre(root->left,ans);
    pre(root->right,ans);
}

node* bst(vector<int> ans,int &min,int &max,int &i){
    if(i>=ans.size()){
        return NULL;
    }

    if(ans[i]<min || ans[i]>max){
        return NULL;
    }
    node* root=new node(ans[i++]);

    root->left=bst(ans,min,root->data,i);
    root->right=bst(ans,root->data,max,i);

    return root;

}
void printf(node* root){
    queue<node*> q;
    q.push(root);
    q.push(NULL);
    while(!q.empty()){

        node* temp=q.front();
        q.pop();

        if(temp==NULL){
            cout<<endl;
            if(!q.empty()){
                q.push(NULL);
            }
        }
        else{
            cout<<temp->data;
            if(temp->left){
                q.push(temp->left);
            }
            if(temp->right){
                q.push(temp->right);
            }


        }


    }

}
int main(){
    node* root=built();
    vector<int> ans;
    pre(root,ans);
    int min=INT_MIN;
    int max=INT_MAX;
    int i=0;

   node* temp= bst(ans,min,max,i);
   printf(temp);


}